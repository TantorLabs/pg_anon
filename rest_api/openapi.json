{
  "openapi": "3.1.0",
  "info": {
    "title": "Web service for pg_anon",
    "version": "0.1.0"
  },
  "paths": {
    "/db-connections": {
      "get": {
        "tags": [
          "DB Connections"
        ],
        "summary": "List of db connections",
        "description": "Receive list of db connections",
        "operationId": "db_connections_list_db_connections_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DbConnection"
                  },
                  "type": "array",
                  "title": "Response Db Connections List Db Connections Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DB Connections"
        ],
        "summary": "Create new db connection",
        "description": "Creating of db connection",
        "operationId": "db_connection_create_db_connections_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbConnectionCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbConnection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/db-connections/{db_connection_id}": {
      "get": {
        "tags": [
          "DB Connections"
        ],
        "summary": "DB Connection details",
        "description": "Receive DB connection details",
        "operationId": "db_connection_details_db_connections__db_connection_id__get",
        "parameters": [
          {
            "name": "db_connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Db Connection Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbConnection"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DB Connections"
        ],
        "summary": "Update existing db connection",
        "description": "Updating of existing db connection",
        "operationId": "db_connection_update_db_connections__db_connection_id__put",
        "parameters": [
          {
            "name": "db_connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Db Connection Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbConnectionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbConnection"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DB Connections"
        ],
        "summary": "Delete db connection",
        "description": "Deleting of db connection",
        "operationId": "db_connection_delete_db_connections__db_connection_id__delete",
        "parameters": [
          {
            "name": "db_connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Db Connection Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "DB Connections"
        ],
        "summary": "Rename db connection",
        "description": "Renaming of db connection",
        "operationId": "db_connection_rename_db_connections__db_connection_id__patch",
        "parameters": [
          {
            "name": "db_connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Db Connection Id"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Title"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbConnection"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/db-connections/{db_connection_id}/check": {
      "post": {
        "tags": [
          "DB Connections"
        ],
        "summary": "Check existing db connection",
        "description": "Checking of existing db connection",
        "operationId": "db_connection_check_db_connections__db_connection_id__check_post",
        "parameters": [
          {
            "name": "db_connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Db Connection Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/DbConnectionCredentials"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Credentials"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbCheckConnectionStatus"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/db-connections/raw-check": {
      "post": {
        "tags": [
          "DB Connections"
        ],
        "summary": "Check not already exists db connection",
        "description": "Checking of not already exists db connection",
        "operationId": "db_connection_raw_check_db_connections_raw_check_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbConnectionFullCredentials"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbCheckConnectionStatus"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/project": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "List of projects",
        "description": "Receive list of projects",
        "operationId": "projects_list_project_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  },
                  "type": "array",
                  "title": "Response Projects List Project Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Create new project",
        "description": "Creating of new project",
        "operationId": "project_create_project_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/project/{project_id}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Project details",
        "description": "Receive project details",
        "operationId": "project_details_project__project_id__get",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Update existing project",
        "description": "Updating of existing project",
        "operationId": "project_update_project__project_id__put",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Projects"
        ],
        "summary": "Delete project",
        "description": "Deleting of project",
        "operationId": "project_delete_project__project_id__delete",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Projects"
        ],
        "summary": "Rename project",
        "description": "Renaming of project",
        "operationId": "project_rename_project__project_id__patch",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Title"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/dictionary/template": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Get dictionary template by type of dictionary",
        "description": "Getting of dictionary template by type of dictionary",
        "operationId": "dictionary_template_dictionary_template_get",
        "parameters": [
          {
            "name": "type_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Type Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/dictionary": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "List of dictionaries",
        "description": "Receive list of dictionaries",
        "operationId": "dictionary_list_dictionary_get",
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          },
          {
            "name": "type_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Type Id"
            }
          },
          {
            "name": "is_predefined",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Predefined"
            }
          },
          {
            "name": "scan_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Scan Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DictionaryShort"
                  },
                  "title": "Response Dictionary List Dictionary Get"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Create new dictionary",
        "description": "Creating of new dictionary",
        "operationId": "dictionary_create_dictionary_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DictionaryCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DictionaryDetailed"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/dictionary/{dict_id}": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Project details",
        "description": "Receive project details",
        "operationId": "dictionary_details_dictionary__dict_id__get",
        "parameters": [
          {
            "name": "dict_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dict Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DictionaryDetailed"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Update existing dictionary",
        "description": "Updating of existing dictionary",
        "operationId": "dictionary_update_dictionary__dict_id__put",
        "parameters": [
          {
            "name": "dict_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dict Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DictionaryUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DictionaryDetailed"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Delete dictionary",
        "description": "Deleting of dictionary",
        "operationId": "dictionary_delete_dictionary__dict_id__delete",
        "parameters": [
          {
            "name": "dict_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dict Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Rename dictionary",
        "description": "Renaming of dictionary",
        "operationId": "dictionary_rename_dictionary__dict_id__patch",
        "parameters": [
          {
            "name": "dict_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dict Id"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Title"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DictionaryShort"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/dictionary/{dict_id}/duplicate": {
      "post": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Duplicate dictionary with another name",
        "description": "Duplicating of dictionary with another name",
        "operationId": "dictionary_duplicate_dictionary__dict_id__duplicate_post",
        "parameters": [
          {
            "name": "dict_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dict Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DictionaryDuplicate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DictionaryShort"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/scan": {
      "get": {
        "tags": [
          "Scans"
        ],
        "summary": "List of scans",
        "description": "Receive list of scans",
        "operationId": "scan_list_scan_get",
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Scan"
                  },
                  "title": "Response Scan List Scan Get"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Scans"
        ],
        "summary": "Create new scan",
        "description": "Creating of new scan",
        "operationId": "scan_create_scan_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScanCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Scan"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/scan/{scan_id}": {
      "get": {
        "tags": [
          "Scans"
        ],
        "summary": "Scan details",
        "description": "Receive scan details",
        "operationId": "scan_details_scan__scan_id__get",
        "parameters": [
          {
            "name": "scan_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Scan Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Scan"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Scans"
        ],
        "summary": "Delete scan",
        "description": "Deleting of scan",
        "operationId": "scan_delete_scan__scan_id__delete",
        "parameters": [
          {
            "name": "scan_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Scan Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Scans"
        ],
        "summary": "Rename scan",
        "description": "Renaming of scan",
        "operationId": "scan_rename_scan__scan_id__patch",
        "parameters": [
          {
            "name": "scan_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Scan Id"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Title"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Scan"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/scan/{scan_id}/stop": {
      "post": {
        "tags": [
          "Scans"
        ],
        "summary": "Stop scan task",
        "description": "Stopping scan task",
        "operationId": "scan_stop_scan__scan_id__stop_post",
        "parameters": [
          {
            "name": "scan_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Scan Id"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview": {
      "get": {
        "tags": [
          "Previews"
        ],
        "summary": "List of previews",
        "description": "Receive list of previews",
        "operationId": "preview_list_preview_get",
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Preview"
                  },
                  "title": "Response Preview List Preview Get"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Previews"
        ],
        "summary": "Create new preview",
        "description": "Creating of new preview",
        "operationId": "preview_create_preview_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreviewCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Preview"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/{preview_id}": {
      "get": {
        "tags": [
          "Previews"
        ],
        "summary": "Preview details",
        "description": "Receive preview details",
        "operationId": "preview_details_preview__preview_id__get",
        "parameters": [
          {
            "name": "preview_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Preview Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Preview"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Previews"
        ],
        "summary": "Update preview",
        "description": "Updating preview",
        "operationId": "preview_update_preview__preview_id__put",
        "parameters": [
          {
            "name": "preview_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Preview Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreviewUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Preview"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Previews"
        ],
        "summary": "Delete preview",
        "description": "Deleting of preview",
        "operationId": "preview_delete_preview__preview_id__delete",
        "parameters": [
          {
            "name": "preview_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Preview Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Previews"
        ],
        "summary": "Rename preview",
        "description": "Renaming of preview",
        "operationId": "preview_rename_preview__preview_id__patch",
        "parameters": [
          {
            "name": "preview_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Preview Id"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Title"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/{preview_id}/fields": {
      "post": {
        "tags": [
          "Previews"
        ],
        "summary": "Render preview rules by fields",
        "description": "Rendering of preview rules by fields",
        "operationId": "preview_fields_preview__preview_id__fields_post",
        "parameters": [
          {
            "name": "preview_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Preview Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/{preview_id}/data": {
      "post": {
        "tags": [
          "Previews"
        ],
        "summary": "Render preview data by rules",
        "description": "Rendering of preview data by rules",
        "operationId": "preview_fields_preview__preview_id__data_post",
        "parameters": [
          {
            "name": "preview_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Preview Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/dump": {
      "get": {
        "tags": [
          "Dumps"
        ],
        "summary": "List of dumps",
        "description": "Receive list of dumps",
        "operationId": "dump_list_dump_get",
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dump"
                  },
                  "title": "Response Dump List Dump Get"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Dumps"
        ],
        "summary": "Create new dump",
        "description": "Creating of new dump",
        "operationId": "dump_create_dump_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DumpCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dump"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/dump/{dump_id}": {
      "get": {
        "tags": [
          "Dumps"
        ],
        "summary": "Dump details",
        "description": "Receive dump details",
        "operationId": "dump_details_dump__dump_id__get",
        "parameters": [
          {
            "name": "dump_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dump Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dump"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Dumps"
        ],
        "summary": "Delete dump",
        "description": "Deleting of dump",
        "operationId": "dump_delete_dump__dump_id__delete",
        "parameters": [
          {
            "name": "dump_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dump Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Dumps"
        ],
        "summary": "Rename dump",
        "description": "Renaming of dump",
        "operationId": "dump_rename_dump__dump_id__patch",
        "parameters": [
          {
            "name": "dump_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dump Id"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Title"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dump"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/dump/{dump_id}/stop": {
      "post": {
        "tags": [
          "Dumps"
        ],
        "summary": "Stop dump task",
        "description": "Stopping dump task",
        "operationId": "dump_stop_dump__dump_id__stop_post",
        "parameters": [
          {
            "name": "dump_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dump Id"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/handbook/dictionary-types": {
      "get": {
        "tags": [
          "Handbooks"
        ],
        "summary": "List of dictionary types",
        "operationId": "dictionary_types_handbook_dictionary_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DictionaryType"
                  },
                  "type": "array",
                  "title": "Response Dictionary Types Handbook Dictionary Types Get"
                }
              }
            }
          }
        }
      }
    },
    "/handbook/task-statuses": {
      "get": {
        "tags": [
          "Handbooks"
        ],
        "summary": "List of task statuses",
        "operationId": "task_statuses_handbook_task_statuses_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TaskStatus"
                  },
                  "type": "array",
                  "title": "Response Task Statuses Handbook Task Statuses Get"
                }
              }
            }
          }
        }
      }
    },
    "/handbook/dump-types": {
      "get": {
        "tags": [
          "Handbooks"
        ],
        "summary": "List of dump types",
        "operationId": "dump_types_handbook_dump_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DumpType"
                  },
                  "type": "array",
                  "title": "Response Dump Types Handbook Dump Types Get"
                }
              }
            }
          }
        }
      }
    },
    "/handbook/restore-types": {
      "get": {
        "tags": [
          "Handbooks"
        ],
        "summary": "List of restore types",
        "operationId": "restore_types_handbook_restore_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/RestoreType"
                  },
                  "type": "array",
                  "title": "Response Restore Types Handbook Restore Types Get"
                }
              }
            }
          }
        }
      }
    },
    "/handbook/scan-types": {
      "get": {
        "tags": [
          "Handbooks"
        ],
        "summary": "List of scan types",
        "operationId": "dump_types_handbook_scan_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ScanType"
                  },
                  "type": "array",
                  "title": "Response Dump Types Handbook Scan Types Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/stateless/check_db_connection": {
      "post": {
        "tags": [
          "Stateless"
        ],
        "summary": "Check DB connections with credentials",
        "description": "Check DB connections with credentials",
        "operationId": "db_connection_check_api_stateless_check_db_connection_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbConnectionParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/stateless/scan": {
      "post": {
        "tags": [
          "Stateless"
        ],
        "summary": "Create new scanning operation",
        "description": "Create new scanning operation",
        "operationId": "stateless_scan_start_api_stateless_scan_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScanRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/stateless/view-fields": {
      "post": {
        "tags": [
          "Stateless"
        ],
        "summary": "Render preview rules by fields",
        "description": "Rendering of preview rules by fields",
        "operationId": "stateless_view_fields_api_stateless_view_fields_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ViewFieldsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ViewFieldsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/stateless/view-data": {
      "post": {
        "tags": [
          "Stateless"
        ],
        "summary": "Render preview data by rules",
        "description": "Rendering of preview data by rules",
        "operationId": "stateless_view_data_api_stateless_view_data_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ViewDataRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ViewDataResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/stateless/dump": {
      "post": {
        "tags": [
          "Stateless"
        ],
        "summary": "Create new dump operation",
        "description": "Create new dump operation",
        "operationId": "stateless_dump_start_api_stateless_dump_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DumpRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Stateless"
        ],
        "summary": "Delete dump",
        "description": "Delete dump",
        "operationId": "dump_operation_delete_api_stateless_dump_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DumpDeleteRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/stateless/restore": {
      "post": {
        "tags": [
          "Stateless"
        ],
        "summary": "Run restore operation",
        "description": "Run restore operation",
        "operationId": "stateless_dump_start_api_stateless_restore_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestoreRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DbCheckConnectionStatus": {
        "properties": {
          "status": {
            "type": "boolean",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "DbCheckConnectionStatus"
      },
      "DbConnection": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "host": {
            "type": "string",
            "title": "Host"
          },
          "port": {
            "type": "integer",
            "title": "Port"
          },
          "database": {
            "type": "string",
            "title": "Database"
          },
          "user": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User"
          },
          "attributes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "slug",
          "host",
          "port",
          "database"
        ],
        "title": "DbConnection"
      },
      "DbConnectionCreate": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "host": {
            "type": "string",
            "title": "Host"
          },
          "port": {
            "type": "integer",
            "title": "Port"
          },
          "database": {
            "type": "string",
            "title": "Database"
          },
          "user": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "attributes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          }
        },
        "type": "object",
        "required": [
          "title",
          "slug",
          "host",
          "port",
          "database"
        ],
        "title": "DbConnectionCreate"
      },
      "DbConnectionCredentials": {
        "properties": {
          "user": {
            "type": "string",
            "title": "User"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "user",
          "password"
        ],
        "title": "DbConnectionCredentials"
      },
      "DbConnectionFullCredentials": {
        "properties": {
          "host": {
            "type": "string",
            "title": "Host"
          },
          "port": {
            "type": "integer",
            "title": "Port"
          },
          "database": {
            "type": "string",
            "title": "Database"
          },
          "user": {
            "type": "string",
            "title": "User"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "host",
          "port",
          "database",
          "user",
          "password"
        ],
        "title": "DbConnectionFullCredentials"
      },
      "DbConnectionParams": {
        "properties": {
          "host": {
            "type": "string",
            "title": "Host"
          },
          "port": {
            "type": "integer",
            "title": "Port"
          },
          "db_name": {
            "type": "string",
            "title": "Db Name"
          },
          "user_login": {
            "type": "string",
            "title": "User Login"
          },
          "user_password": {
            "type": "string",
            "title": "User Password"
          }
        },
        "type": "object",
        "required": [
          "host",
          "port",
          "db_name",
          "user_login",
          "user_password"
        ],
        "title": "DbConnectionParams"
      },
      "DbConnectionUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "host": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Host"
          },
          "port": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Port"
          },
          "database": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Database"
          },
          "user": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "attributes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          }
        },
        "type": "object",
        "required": [
          "slug"
        ],
        "title": "DbConnectionUpdate"
      },
      "DictionaryContent": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "additional_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Info"
          },
          "content": {
            "type": "string",
            "title": "Content"
          }
        },
        "type": "object",
        "required": [
          "name",
          "content"
        ],
        "title": "DictionaryContent"
      },
      "DictionaryCreate": {
        "properties": {
          "project_id": {
            "type": "integer",
            "title": "Project Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "type_id": {
            "type": "integer",
            "title": "Type Id"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "attributes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "title",
          "type_id",
          "content"
        ],
        "title": "DictionaryCreate"
      },
      "DictionaryDetailed": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "project_id": {
            "type": "integer",
            "title": "Project Id"
          },
          "type_id": {
            "type": "integer",
            "title": "Type Id"
          },
          "is_predefined": {
            "type": "boolean",
            "title": "Is Predefined",
            "default": false
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "attributes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "title": "Updated"
          },
          "scan_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scan Title"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "slug",
          "project_id",
          "type_id",
          "content",
          "created",
          "updated"
        ],
        "title": "DictionaryDetailed"
      },
      "DictionaryDuplicate": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "attributes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          }
        },
        "type": "object",
        "required": [
          "title"
        ],
        "title": "DictionaryDuplicate"
      },
      "DictionaryMetadata": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "additional_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Info"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "DictionaryMetadata"
      },
      "DictionaryShort": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "project_id": {
            "type": "integer",
            "title": "Project Id"
          },
          "type_id": {
            "type": "integer",
            "title": "Type Id"
          },
          "is_predefined": {
            "type": "boolean",
            "title": "Is Predefined",
            "default": false
          },
          "attributes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "title": "Updated"
          },
          "scan_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scan Title"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "slug",
          "project_id",
          "type_id",
          "created",
          "updated"
        ],
        "title": "DictionaryShort"
      },
      "DictionaryType": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "slug"
        ],
        "title": "DictionaryType"
      },
      "DictionaryUpdate": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "attributes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          }
        },
        "type": "object",
        "required": [
          "title",
          "content"
        ],
        "title": "DictionaryUpdate"
      },
      "Dump": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "project_id": {
            "type": "integer",
            "title": "Project Id"
          },
          "type_id": {
            "type": "integer",
            "title": "Type Id"
          },
          "source_db": {
            "$ref": "#/components/schemas/DbConnection"
          },
          "custom_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Path"
          },
          "attributes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          },
          "input_sens_dict_titles": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Sens Dict Titles"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "title": "Updated"
          },
          "size": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "slug",
          "project_id",
          "type_id",
          "source_db",
          "status",
          "created",
          "updated"
        ],
        "title": "Dump"
      },
      "DumpCreate": {
        "properties": {
          "project_id": {
            "type": "integer",
            "title": "Project Id"
          },
          "source_db_id": {
            "type": "integer",
            "title": "Source Db Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "type_id": {
            "type": "integer",
            "title": "Type Id"
          },
          "custom_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Path"
          },
          "input_sens_dict_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Input Sens Dict Ids"
          },
          "attributes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "source_db_id",
          "title",
          "type_id",
          "input_sens_dict_ids"
        ],
        "title": "DumpCreate"
      },
      "DumpDeleteRequest": {
        "properties": {
          "path": {
            "type": "string",
            "title": "Path"
          }
        },
        "type": "object",
        "required": [
          "path"
        ],
        "title": "DumpDeleteRequest"
      },
      "DumpRequest": {
        "properties": {
          "operation_id": {
            "type": "string",
            "title": "Operation Id"
          },
          "db_connection_params": {
            "$ref": "#/components/schemas/DbConnectionParams"
          },
          "webhook_status_url": {
            "type": "string",
            "title": "Webhook Status Url"
          },
          "type_id": {
            "type": "integer",
            "title": "Type Id"
          },
          "sens_dict_contents": {
            "items": {
              "$ref": "#/components/schemas/DictionaryContent"
            },
            "type": "array",
            "title": "Sens Dict Contents"
          },
          "output_path": {
            "type": "string",
            "title": "Output Path"
          },
          "pg_dump_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pg Dump Path"
          },
          "proc_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Proc Count"
          },
          "proc_conn_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Proc Conn Count"
          }
        },
        "type": "object",
        "required": [
          "operation_id",
          "db_connection_params",
          "webhook_status_url",
          "type_id",
          "sens_dict_contents",
          "output_path"
        ],
        "title": "DumpRequest"
      },
      "DumpType": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "slug"
        ],
        "title": "DumpType"
      },
      "ErrorResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "ErrorResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Preview": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "project_id": {
            "type": "integer",
            "title": "Project Id"
          },
          "source_db": {
            "$ref": "#/components/schemas/DbConnection"
          },
          "input_sens_dict_titles": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Sens Dict Titles"
          },
          "attributes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "title": "Updated"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "slug",
          "project_id",
          "source_db",
          "created",
          "updated"
        ],
        "title": "Preview"
      },
      "PreviewCreate": {
        "properties": {
          "project_id": {
            "type": "integer",
            "title": "Project Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "source_db_id": {
            "type": "integer",
            "title": "Source Db Id"
          },
          "input_sens_dict_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Input Sens Dict Ids"
          },
          "attributes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "title",
          "source_db_id",
          "input_sens_dict_ids"
        ],
        "title": "PreviewCreate"
      },
      "PreviewUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "source_db_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Db Id"
          },
          "input_sens_dict_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Sens Dict Ids"
          },
          "attributes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          }
        },
        "type": "object",
        "title": "PreviewUpdate"
      },
      "Project": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "title": "Updated"
          },
          "custom_pg_dump_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Pg Dump Path"
          },
          "attributes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          },
          "last_scan_run": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Scan Run"
          },
          "last_scan_task_status_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Scan Task Status Id"
          },
          "last_dump_run": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Dump Run"
          },
          "last_dump_task_status_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Dump Task Status Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "slug",
          "created",
          "updated"
        ],
        "title": "Project"
      },
      "ProjectCreate": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "custom_pg_dump_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Pg Dump Path"
          },
          "attributes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          }
        },
        "type": "object",
        "required": [
          "title"
        ],
        "title": "ProjectCreate"
      },
      "ProjectUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "custom_pg_dump_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Pg Dump Path"
          },
          "attributes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          }
        },
        "type": "object",
        "title": "ProjectUpdate"
      },
      "RestoreRequest": {
        "properties": {
          "operation_id": {
            "type": "string",
            "title": "Operation Id"
          },
          "db_connection_params": {
            "$ref": "#/components/schemas/DbConnectionParams"
          },
          "webhook_status_url": {
            "type": "string",
            "title": "Webhook Status Url"
          },
          "type_id": {
            "type": "integer",
            "title": "Type Id"
          },
          "input_path": {
            "type": "string",
            "title": "Input Path"
          },
          "pg_restore_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pg Restore Path"
          },
          "proc_conn_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Proc Conn Count"
          },
          "drop_custom_check_constr": {
            "type": "boolean",
            "title": "Drop Custom Check Constr",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "operation_id",
          "db_connection_params",
          "webhook_status_url",
          "type_id",
          "input_path"
        ],
        "title": "RestoreRequest"
      },
      "RestoreType": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "slug"
        ],
        "title": "RestoreType"
      },
      "Scan": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "project_id": {
            "type": "integer",
            "title": "Project Id"
          },
          "type_id": {
            "type": "integer",
            "title": "Type Id"
          },
          "depth": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Depth"
          },
          "attributes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          },
          "source_db": {
            "$ref": "#/components/schemas/DbConnection"
          },
          "input_meta_dict_titles": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Input Meta Dict Titles"
          },
          "input_sens_dict_titles": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Sens Dict Titles"
          },
          "input_no_sens_dict_titles": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input No Sens Dict Titles"
          },
          "status_id": {
            "type": "integer",
            "title": "Status Id"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "title": "Updated"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "slug",
          "project_id",
          "type_id",
          "source_db",
          "input_meta_dict_titles",
          "status_id",
          "created",
          "updated"
        ],
        "title": "Scan"
      },
      "ScanCreate": {
        "properties": {
          "project_id": {
            "type": "integer",
            "title": "Project Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "slug": {
            "type": "integer",
            "title": "Slug"
          },
          "type_id": {
            "type": "integer",
            "title": "Type Id"
          },
          "depth": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Depth"
          },
          "source_db_id": {
            "type": "integer",
            "title": "Source Db Id"
          },
          "input_meta_dict_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Input Meta Dict Ids"
          },
          "input_sens_dict_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Sens Dict Ids"
          },
          "input_no_sens_dict_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input No Sens Dict Ids"
          },
          "output_sens_dict_name": {
            "type": "string",
            "title": "Output Sens Dict Name"
          },
          "output_no_sens_dict_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output No Sens Dict Name"
          },
          "attributes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "title",
          "slug",
          "type_id",
          "source_db_id",
          "input_meta_dict_ids",
          "output_sens_dict_name"
        ],
        "title": "ScanCreate"
      },
      "ScanRequest": {
        "properties": {
          "operation_id": {
            "type": "string",
            "title": "Operation Id"
          },
          "db_connection_params": {
            "$ref": "#/components/schemas/DbConnectionParams"
          },
          "webhook_status_url": {
            "type": "string",
            "title": "Webhook Status Url"
          },
          "type_id": {
            "type": "integer",
            "title": "Type Id"
          },
          "meta_dict_contents": {
            "items": {
              "$ref": "#/components/schemas/DictionaryContent"
            },
            "type": "array",
            "title": "Meta Dict Contents"
          },
          "sens_dict_contents": {
            "items": {
              "$ref": "#/components/schemas/DictionaryContent"
            },
            "type": "array",
            "title": "Sens Dict Contents"
          },
          "no_sens_dict_contents": {
            "items": {
              "$ref": "#/components/schemas/DictionaryContent"
            },
            "type": "array",
            "title": "No Sens Dict Contents"
          },
          "need_no_sens_dict": {
            "type": "boolean",
            "title": "Need No Sens Dict",
            "default": false
          },
          "depth": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Depth"
          },
          "proc_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Proc Count"
          },
          "proc_conn_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Proc Conn Count"
          }
        },
        "type": "object",
        "required": [
          "operation_id",
          "db_connection_params",
          "webhook_status_url",
          "type_id",
          "meta_dict_contents"
        ],
        "title": "ScanRequest"
      },
      "ScanType": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "slug"
        ],
        "title": "ScanType"
      },
      "TaskStatus": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "slug"
        ],
        "title": "TaskStatus"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "ViewDataContent": {
        "properties": {
          "schema_name": {
            "type": "string",
            "title": "Schema Name"
          },
          "table_name": {
            "type": "string",
            "title": "Table Name"
          },
          "field_names": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Field Names"
          },
          "total_rows_count": {
            "type": "integer",
            "title": "Total Rows Count"
          },
          "rows_before": {
            "items": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "array",
            "title": "Rows Before"
          },
          "rows_after": {
            "items": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "array",
            "title": "Rows After"
          }
        },
        "type": "object",
        "required": [
          "schema_name",
          "table_name",
          "field_names",
          "total_rows_count",
          "rows_before",
          "rows_after"
        ],
        "title": "ViewDataContent"
      },
      "ViewDataRequest": {
        "properties": {
          "db_connection_params": {
            "$ref": "#/components/schemas/DbConnectionParams"
          },
          "sens_dict_contents": {
            "items": {
              "$ref": "#/components/schemas/DictionaryContent"
            },
            "type": "array",
            "title": "Sens Dict Contents"
          },
          "schema_name": {
            "type": "string",
            "title": "Schema Name"
          },
          "table_name": {
            "type": "string",
            "title": "Table Name"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "default": 10
          },
          "offset": {
            "type": "integer",
            "title": "Offset",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "db_connection_params",
          "sens_dict_contents",
          "schema_name",
          "table_name"
        ],
        "title": "ViewDataRequest"
      },
      "ViewDataResponse": {
        "properties": {
          "status_id": {
            "type": "integer",
            "title": "Status Id"
          },
          "content": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ViewDataContent"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "status_id"
        ],
        "title": "ViewDataResponse"
      },
      "ViewFieldsContent": {
        "properties": {
          "schema_name": {
            "type": "string",
            "title": "Schema Name"
          },
          "table_name": {
            "type": "string",
            "title": "Table Name"
          },
          "field_name": {
            "type": "string",
            "title": "Field Name"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "dict_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DictionaryMetadata"
              },
              {
                "type": "null"
              }
            ]
          },
          "rule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rule"
          }
        },
        "type": "object",
        "required": [
          "schema_name",
          "table_name",
          "field_name",
          "type"
        ],
        "title": "ViewFieldsContent"
      },
      "ViewFieldsRequest": {
        "properties": {
          "db_connection_params": {
            "$ref": "#/components/schemas/DbConnectionParams"
          },
          "sens_dict_contents": {
            "items": {
              "$ref": "#/components/schemas/DictionaryContent"
            },
            "type": "array",
            "title": "Sens Dict Contents"
          },
          "schema_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Schema Name"
          },
          "schema_mask": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Schema Mask"
          },
          "table_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Table Name"
          },
          "table_mask": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Table Mask"
          },
          "view_only_sensitive_fields": {
            "type": "boolean",
            "title": "View Only Sensitive Fields",
            "default": false
          },
          "fields_limit_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fields Limit Count"
          }
        },
        "type": "object",
        "required": [
          "db_connection_params",
          "sens_dict_contents"
        ],
        "title": "ViewFieldsRequest"
      },
      "ViewFieldsResponse": {
        "properties": {
          "status_id": {
            "type": "integer",
            "title": "Status Id"
          },
          "content": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ViewFieldsContent"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          }
        },
        "type": "object",
        "required": [
          "status_id"
        ],
        "title": "ViewFieldsResponse"
      }
    }
  }
}